#!/usr/bin/env python

import sys, os
from JMTucker.Tools.CRAB3ToolsBase import crabify_list
from JMTucker.Tools.CondorTools import *
from JMTucker.Tools import colors

if len(sys.argv) < 2 or '-h' in sys.argv or '--help' in sys.argv:
    print 'usage: cs_status [options] wd [wd2 ...]'
    print '   -h   print this msg'
    print '   -l   print list of done directories'
    print '   -a   resubmit: resubmit any jobs that failed (no check on exit code)'
    print '   -r   resubmit: resubmit jobs that failed because of xrdcp problems'
    print '   -k   resubmit killed: resubmit all killed jobs (with no check on reason)'
    sys.exit(1)

resubmit_all = '-a' in sys.argv
resubmit = resubmit_all or '-r' in sys.argv
resubmit_killed = '-k' in sys.argv
list_done = '-l' in sys.argv
verbose = True #'-v' in sys.argv
wds = cs_dirs_from_argv()
ml = max(len(wd) for wd in wds) + 3
fmt = '%' + str(ml) + 's %10s | %10s %10s %10s %10s %10s'

def safe_to_resubmit(r):
    return resubmit_all or \
        r in [147,84,92]  # xrdcp problem, file open error, fallback file open error

def return_code(r):
    if r == 147:
        return 'xrdcp problem'
    else:
        return 'Exit %i' % r

def z(n):
    return '-' if n == 0 else str(n)

def header():
    print colors.bold(fmt % ('dir'.ljust(ml), 'njobs', 'done', 'idle', 'run', 'killed', 'problem'))
header()

sums = [0]*6
done = []

for wd in wds:
    ana = cs_analyze(wd)

    for i in xrange(6):
        sums[i] += ana.ns[i]

    color = colors.cyan
    if ana.nprobs:
        color = colors.magenta
    elif ana.nkilled:
        color = colors.yellow
    elif ana.ndone == ana.njobs:
        done.append(wd)
        color = colors.green
    
    print color(fmt % (wd.ljust(ml), z(ana.njobs), z(ana.ndone), z(ana.nidle), z(ana.nrun), z(ana.nkilled), z(ana.nprobs))), 
    if ana.nprobs:
        print ' :', colors.magenta(crabify_list(ana.probs())),
    if ana.nkilled:
        print ' :', colors.yellow(crabify_list(ana.killed())),
    print

    if ana.nprobs:
        if verbose or resubmit:
            for r, l in ana.by_exit.iteritems():
                print '  %s:' % return_code(r), crabify_list(l)
            for e, l in ana.by_exception.iteritems():
                print '  %s:' % e, crabify_list(l)

        if resubmit:
            to_resubmit = []
            for r, l in ana.by_exit.iteritems():
                if safe_to_resubmit(r):
                    to_resubmit.extend(l)
            if to_resubmit:
                cl = crabify_list(l)
                print '  resubmit these:', cl
                os.system('cs_resubmit %s %s' % (wd, cl))

    if ana.nkilled and resubmit_killed:
        cl = crabify_list(ana.killed())
        print '  resubmit these:', cl
        os.system('cs_resubmit %s %s' % (wd, cl))

header()
print colors.bold(fmt % (('totals'.ljust(ml),) + tuple(sums)))

if list_done:
    print '\nthese are done:', ' '.join(done)
if len(done) == len(wds):
    print '\nAll done!'
