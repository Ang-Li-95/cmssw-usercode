#!/usr/bin/env python

import os
import glob
import sys
import JMTucker.Tools.argparse as argparse
from JMTucker.Tools.CondorTools import is_cs_dir, cs_hadd

parser = argparse.ArgumentParser(description = 'cs_hadd: hadd the files from a condor directory',
                                 usage = '%(prog)s [options] condor_dirs')

parser.add_argument('positional', nargs='*', help='The condor directories.')

parser.add_argument('--chunk-size', default=900, type=int,
                    help='The maximum number files hadded at once.')
parser.add_argument('--pattern',
                    help='Glob-style pattern to filter the files, useful if there are multiple files output per job.')

options = parser.parse_args()

if len(options.positional) == 0:
    print 'Required positional args missing: at least one condor directory\n'
    parser.print_help()
    sys.exit(1)

########################################################################

cs_dirs = options.positional

ok = False

for x in cs_dirs:
    if is_cs_dir(x):
        ok = True
        cs_hadd(x, chunk_size=options.chunk_size, pattern=options.pattern)
    elif os.path.isdir(x):
        # if we have a dir of cs dirs, cs_hadd all the directories in it.
        sub_dirs = [d for d in glob.glob(os.path.join(x, '*')) if is_cs_dir(d)]
        for y in sub_dirs:
            ok = True
            cs_hadd(y, new_dir=x, chunk_size=options.chunk_size, pattern=options.pattern)

if not ok:
    raise ValueError('no cs dirs found in argv')
