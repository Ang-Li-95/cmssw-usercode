#!/usr/bin/env python

import os
from sys import argv
from JMTucker.Tools.CRAB3ToolsBase import crab_dirs_from_argv, crab_get_output_dir, crab_print_requestcache
from JMTucker.Tools import colors

dirs = crab_dirs_from_argv()
verbose = True

def simple_cmd(cmd_fmt):
    for d in dirs:
        cmd = cmd_fmt % d
        if verbose:
            print colors.bold(cmd)
        code = os.system(cmd)
        if verbose:
            color = colors.boldred if code != 0 else colors.boldgreen
            print color('exit code: %s' % code)
            print

def simple_fcn(fcn):
    for d in dirs:
        if verbose:
            print colors.bold(d)
        x = fcn(d)
        if x is not None:
            print x
        if verbose:
            print

if 'st' in argv or 'stat' in argv:
    simple_cmd('crab status -d %s')
elif 'rq' in argv or 'cfg' in argv:
    simple_fcn(crab_print_requestcache)
elif 'kl' in argv or 'kill' in argv:
    simple_cmd('crab kill -d %s')
elif 'outdir' in argv:
    simple_fcn(crab_get_output_dir)
elif 'out' in argv:
    simple_cmd('crab out -d %s --xrootd')
elif 'get' in argv:
    simple_cmd('crab out -d %s')
elif 'res' in argv:
    simple_cmd('crab resubmit -d %s')
elif 'respub' in argv:
    simple_cmd('crab resubmit --publication -d %s')
elif 'rep' in argv:
    simple_cmd('crab report -d %s')
elif 'hl' in argv:
    os.system('tar --remove-files -czf haddlogs.tgz *.haddlog')
elif 'ds' in argv:
    simple_cmd('grep "Output dataset:" %s/crab.log | tail -1')
elif 'web' in argv:
    simple_cmd("grep 'Task URL to use for HELP' %s/crab.log | tail -n 1 | sed 's/.*http/http/'")
else:
    raise ValueError("didn't understand command, argv was %r", argv)
