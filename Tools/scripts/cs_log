#!/usr/bin/env python

import os, sys
join = os.path.join
from glob import glob
from JMTucker.Tools.CRAB3ToolsBase import crabify_list, crab_jobs_from_argv
from JMTucker.Tools.CondorSubmitter import CondorSubmitter
from JMTucker.Tools.CondorTools import *
from JMTucker.Tools.general import mkdirp

fns_only = '-f' in sys.argv
include_log = '-l' in sys.argv
include_stderr = '-e' in sys.argv
if fns_only:
    sys.argv.remove('-f')
if include_log:
    sys.argv.remove('-l')
if include_stderr:
    sys.argv.remove('-e')
if '-le' in sys.argv:
    include_log = include_stderr = True
    sys.argv.remove('-le')
    
if len(sys.argv) < 3:
    print 'usage: cs_resubmit condor_dir jobs_list'
    print '    jobs_list can be space separated, or can handle a string like 1,3,5-7'
    sys.exit(1)

wd = os.path.abspath(sys.argv[1])
if not is_cs_dir(wd):
    raise ValueError('first arg must be a CondorSubmitter dir')

jobs = crab_jobs_from_argv()
if not jobs:
    raise ValueError('expect a list of jobs in argv')

def doit(fn):
    if fns_only:
        print fn,
    else:
        os.system('less %s' % fn)

for job in jobs:
    doit('%s/stdout.%s' % (wd, job))
    if include_stderr:
        doit('%s/stderr.%s' % (wd, job))
    if include_log:
        doit('%s/log.%s' % (wd, job))

if fns_only:
    print

