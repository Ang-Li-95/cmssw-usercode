import sys
from JMTucker.Tools.BasicAnalyzer_cfg import cms, process
from JMTucker.Tools import SampleFiles

SampleFiles.setup(process, 'MFVNtupleV15', 'qcdht1000', 100000)
process.TFileService.fileName = 'histos.root'

process.load('JMTucker.MFVNeutralino.VertexSelector_cfi')
process.load('JMTucker.MFVNeutralino.Histos_cff')

weights = [0, 0, 11.216211854475178, 0.099816639922185715, 0.24088798157415323, 0.6409494509215764, 0.51222002815086687, 0.50230703524684983, 0.76029492483800654, 1.1201091553615206, 1.4622354007482425, 1.7640240061991863, 1.7601978814518944, 1.5295156664331993, 1.2932254563752799, 1.1205049981742219, 1.0253913010149134, 1.0204437178270438, 1.009841687393092, 1.0916707557790162, 1.1362077352112634, 1.164283475612194, 1.1876972787117708, 1.1673247031431662, 1.1825929286971055, 1.1703863832873986, 1.0789488393115678, 0.96361080855110426, 0.8634377226588249, 0.74859069928783162, 0.62046324669183406, 0.51378444529082523, 0.41651526095562308, 0.30941188724681212, 0.2353111666112277, 0.1766427700998485, 0.1251742826195113, 0.092845042428810323, 0.063544575649698481, 0.053067431338665899, 0.046651559881404625, 0.04752489754151145, 0.04723414885912626, 0.058716329839671795, 0.063098568771008778, 0.07042793811754941, 0.099805850852301536, 0.096595128658746032, 0.13013703991539194, 0.15113401712208407, 0.21705329653242536, 0.22459787649021037, 0.22595445481857165, 0.26754466763965357, 0.4914379128943277, 0.61938435684106197, 2.062868121616785, 1.7020990298911161, 1.3922304229322784]

weights_down = [0, 0, 11.242493843625846, 0.066520051250071613, 0.47935565060445862, 1.2513310844237153, 0.8250386148475769, 0.76121077562430284, 1.0919087173134352, 1.5384551797524848, 1.9474624403300029, 2.1658160358966647, 2.0069813453478997, 1.6898099982876651, 1.4122257234507989, 1.2058574519642578, 1.0883739475686067, 1.0768738902982666, 1.0576742046813439, 1.1322268685089198, 1.1714244562210339, 1.1946809559721643, 1.2018682993739749, 1.145396731029823, 1.1060888380745213, 1.0322244129949221, 0.89265264258445787, 0.74485578655842155, 0.62085278665546062, 0.49882872674880468, 0.38169545989940584, 0.29012348266387078, 0.21439290482799417, 0.144649702265748, 0.10061453203922356, 0.070917846756368974, 0.049737983310522739, 0.039386468588079211, 0.030978847621206763, 0.030759343887776795, 0.031533121654926506, 0.035647523236751626, 0.037439176777788803, 0.047526300710712927, 0.051109236023960058, 0.056444093194295365, 0.078632011631825649, 0.074506899362377296, 0.097989456457370533, 0.11082250674303572, 0.15465687480173754, 0.15519102022471473, 0.15112089126532499, 0.17290301416993872, 0.3064578722532611, 0.37240134250813062, 1.1961459048851046, 0.95354417570573324, 0.75612487553972163]

weights_up = [0, 0, 10.508138941818887, 0.19344045752202163, 0.14033601066852763, 0.3204663105472314, 0.31111571087681766, 0.33335764806595453, 0.52621311970683116, 0.81571119927084046, 1.0923369021081732, 1.3825906718015939, 1.4951879775219197, 1.3698189668229128, 1.1807778922921215, 1.033408165056146, 0.95917836672249646, 0.96537918296059644, 0.95987623033824987, 1.0451221971886513, 1.0975048061208867, 1.130785641178881, 1.1580937382223102, 1.1507849280174334, 1.1953736048025136, 1.2318004273022634, 1.1953039707305364, 1.1297914456942384, 1.0750553081365604, 0.99350403776275897, 0.88087399128207522, 0.78263606097423122, 0.683411975431646, 0.54996605852310032, 0.45566884300238009, 0.37308066161426734, 0.28560794660079697, 0.2227380269959284, 0.15255022279369426, 0.11920489794144574, 0.092081636949258541, 0.080113820541886302, 0.06911954204957943, 0.077833676743321478, 0.07914101186605621, 0.086277400655806746, 0.1217838098017423, 0.11873093927553419, 0.16219318744122957, 0.19177106801698035, 0.28118716110739417, 0.29771713532019667, 0.3070746005985252, 0.37345102998970359, 0.70575674519330811, 0.91659805350717405, 3.1501847283837852, 2.685229098368882, 2.2703107472695838]


process.mfvWeight.pileup_weights = weights_down

process.p = cms.Path(process.mfvSelectedVerticesSeq * process.mfvHistos)

nm1s = [
    ('Ntracks', 'min_ntracks = 0'),
    ('Drmin',   'max_drmin = 1e9'),
    ('Drmax',   'max_drmax = 1e9'),
    ('Bs2derr', 'max_bs2derr = 1e9'),
    ('Njets',   'min_njetsntks = 0'),
    ('Bs2dsig', 'min_bs2dsig = 0'),
    ('Ntracksptgt3', 'min_ntracksptgt3 = 0'),
    ]

for name, cut in nm1s:
    vtx = eval('process.mfvSelectedVerticesTight.clone(%s)' % cut)
    vtx_name = 'vtxNo' + name
    ana = process.mfvAnalysisCuts.clone(vertex_src = vtx_name)
    ana_name = 'anaNo' + name
    hst = process.mfvVertexHistos.clone(vertex_aux_src = vtx_name)
    hst_name = 'hstNo' + name
    setattr(process, vtx_name, vtx)
    setattr(process, ana_name, ana)
    setattr(process, hst_name, hst)
    setattr(process, 'p' + name, cms.Path(vtx * ana * hst))

hackrundata = False # JMTBAD
if hackrundata:
    from FWCore.PythonUtilities.LumiList import LumiList
    l = LumiList('ana.json').getCMSSWString().split(',')
    process.source.lumisToProcess = cms.untracked.VLuminosityBlockRange(*l)

if __name__ == '__main__' and hasattr(sys, 'argv') and 'submit' in sys.argv:
    import JMTucker.Tools.Samples as Samples
    samples = Samples.ttbar_samples + Samples.qcd_samples
    samples += [Samples.mfv_neutralino_tau0100um_M0400, Samples.mfv_neutralino_tau1000um_M0400, Samples.mfv_neutralino_tau9900um_M0400]

    #samples = Samples.ttbar_samples + Samples.qcd_samples + Samples.leptonic_background_samples + Samples.smaller_background_samples + Samples.mfv_signal_samples

    from JMTucker.Tools.CRABSubmitter import CRABSubmitter
    from JMTucker.Tools.SampleFiles import SampleFiles

    cs = CRABSubmitter('MFVHistosV15_down',
                       total_number_of_events = -1,
                       events_per_job = 200000,
                       manual_datasets = SampleFiles['MFVNtupleV15'],
                       )

    if not hackrundata:
        cs.submit_all(samples)
    else:
        cs.submit_all([Samples.MultiJetPk2012B])
