diff --git a/MFVNeutralino/test/MiniTree/plot_triggers.py b/MFVNeutralino/test/MiniTree/plot_triggers.py
index 67c9180c..1aab32f4 100644
--- a/MFVNeutralino/test/MiniTree/plot_triggers.py
+++ b/MFVNeutralino/test/MiniTree/plot_triggers.py
@@ -3,11 +3,12 @@ ROOT.TH1.AddDirectory(0)
 
 sample = sys.argv[1]
 ntk = sys.argv[2]
+print sample+", ntk = "+ntk
 
 version = "V27m"
 year = '2017'
 set_style()
-ps = plot_saver(plot_dir('trigger_study/trigger_study_%s_ntk%s_%s_%s' % (sample, ntk, version.capitalize(), year)), size=(600,600), root=False, log=False)
+ps = plot_saver(plot_dir('trigger_study/trigger_study_%s_ntk%s_%s_%s' % (sample, ntk, version.capitalize(), year)), size=(600,600), root=False, log=True, pdf=False)
 
 fn = 'myOutput/output_studyNewTriggers_ntk%s_%s/%s.root' % (ntk, year, sample)
 f = ROOT.TFile(fn)
@@ -15,7 +16,7 @@ f = ROOT.TFile(fn)
 trigs = ['all'
         ,'HT'
         ,'Bjet'
-        ,'DisplacedDijet'
+        #,'DisplacedDijet'
         #,'passHT_failBjet'
         #,'failHT_passBjet'
         ]
@@ -28,47 +29,80 @@ colors = [ROOT.kBlack
          ,ROOT.kCyan
          ]
 
-hists = []
+markers = [20
+          ,4
+          ,25
+          ,30
+          ,26
+          ,32
+          ]
+
+dbv_hists = []
+dbv_coarse_hists = []
+dvv_hists = []
+dvv_coarse_hists = []
+
 for trig in trigs :
-    hist = f.Get('h_dvv_%s_coarse' % trig)
-    hists.append(hist)
+    dbv_hist = f.Get('h_dbv_%s' % trig)
+    dbv_coarse_hist = f.Get('h_dbv_%s_coarse' % trig)
+    dvv_hist = f.Get('h_dvv_%s' % trig)
+    dvv_coarse_hist = f.Get('h_dvv_%s_coarse' % trig)
+
+    dbv_hists.append(dbv_hist)
+    dbv_coarse_hists.append(dbv_coarse_hist)
+    dvv_hists.append(dvv_hist)
+    dvv_coarse_hists.append(dvv_coarse_hist)
 
 # FIXME I probably duplicate some things in plot_all
 # that aren't needed, since I implemented it all before
 # adding the ratio plots at the bottom of the script
-def plot_all(hists, colors, trigs, normalize) :
-    leg = ROOT.TLegend(0.45, 0.60, 0.85, 0.80)
+def plot_all(hists, colors, markers, trigs, normalize) :
+    leg = ROOT.TLegend(0.45, 0.75, 0.85, 0.95)
+    ymax = 0
 
     for i in xrange(0, len(hists)) :
         hist = hists[i]
         color = colors[i]
+        marker = markers[i]
         trig = trigs[i]
 
-        hist.SetTitle(';d_{VV} (cm);%s' % ('a.u.' if normalize else 'Events'))
+        xlabel = "d_{VV} (cm)"
+        if "dbv" in hist.GetName() : xlabel = "d_{BV} (cm)"
+
+        hist.SetTitle(';%s;%s' % (xlabel, 'a.u.' if normalize else 'Events'))
         hist.SetLineColor(color)
         hist.SetMarkerColor(color)
+        hist.SetMarkerStyle(marker)
         hist.SetLineWidth(2)
-        integral = hist.Integral()
+        
+        move_overflows_into_visible_bins(hist, opt='under over')
+        integral = hist.Integral(0, hist.GetNbinsX()+1)
         scaleTo = integral
         if scaleTo == 0 : scaleTo = 1
         if normalize : hist.Scale(1./scaleTo)
+
         hist.SetStats(0)
-        hist.SetMinimum(0)
+        #hist.SetMinimum(0)
+        #hist.GetYaxis().SetRangeUser(0,hist.GetMaximum())
+
         trig_name = trig
         if trig_name == 'all' :
             trig_name = 'no trigger'
         leg.AddEntry(hist, trig_name + ", integral = %.2f" % integral)
 
-        if i == 0 :
-            hist.Draw('p')
-            if normalize : hist.GetYaxis().SetRangeUser(0,1)
-        else :
-            hist.Draw('p same')
+        #if i == 0 :
+        #    hist.Draw('p')
+        #else :
+        #    hist.Draw('p same')
 
+        # for the ratio histogram
         hists[i].nice = trig_name + ", integral = %.2f"  % integral
 
+        # for y-axis range
+        ymax = max(ymax, hist.GetMaximum())
+
     leg.SetFillColor(0)
-    leg.Draw()
+    #leg.Draw()
 
     tlatex = ROOT.TLatex()
     tlatex.SetTextSize(0.03)
@@ -77,21 +111,39 @@ def plot_all(hists, colors, trigs, normalize) :
     sample_short_name = sample_short_name.replace('_2018','')
     sample_short_name = sample_short_name.replace('mfv_neu_', 'Multijet ')
     sample_short_name = sample_short_name.replace('mfv_stopdbardbar', 'Dijet ')
-    hists[0].SetTitle('%s, %s;d_{VV} (cm);%s' % (sample_short_name, "normalized to 1" if normalize else "scaled to %s lumi" % year, 'a.u.' if normalize else 'Events'))
-    if normalize : ps.save('dvv_normalize')
-    else :         ps.save('dvv')
+    hist_title = sample_short_name + ", "
+    if normalize :
+        hist_title += "normalized to 1"
+    else :
+        hist_title += "scaled to %s lumi" % year
+        if sample_short_name != "background" :
+            hist_title += ", #sigma = 1fb"
 
+    hists[0].SetMaximum(ymax*1.05)
 
-for normalize in [False, True] :
-    plot_all(hists, colors, trigs, normalize=normalize)
-    sample_short_name = sample
-    sample_short_name = sample_short_name.replace('_2017','')
-    sample_short_name = sample_short_name.replace('_2018','')
-    sample_short_name = sample_short_name.replace('mfv_neu_', 'Multijet ')
-    sample_short_name = sample_short_name.replace('mfv_stopdbardbar', 'Dijet ')
+    xlabel = "d_{VV} (cm)"
+    if "dbv" in hists[0].GetName() : xlabel = "d_{BV} (cm)"
+    hists[0].SetTitle('%s;%s;%s' % (hist_title, xlabel, 'a.u.' if normalize else 'Events'))
 
-    # FIXME I should confirm that these uncertainties are correct
-    if normalize :
-        ratios_plot("dvv_ratio_normalize",hists,ps,res_fit=False,legend=(0.45, 0.60, 0.85, 0.80),draw_normalized=normalize,res_divide_opt={'confint': propagate_ratio, 'force_le_1': False, 'no_zeroes' : True})
-    else :
-        ratios_plot("dvv_ratio"          ,hists,ps,res_fit=False,legend=(0.45, 0.60, 0.85, 0.80),draw_normalized=normalize,res_divide_opt={'confint': propagate_ratio, 'force_le_1': False, 'no_zeroes' : True},res_y_range=(0,1))
+    #if normalize : ps.save('dvv_normalize')
+    #else :         ps.save('dvv')
+
+
+for hists in [dbv_hists, dbv_coarse_hists, dvv_hists, dvv_coarse_hists] :
+    for normalize in [False, True] :
+        plot_all(hists, colors, markers, trigs, normalize=normalize)
+
+        if hists == dbv_hists :
+            category = "dbv"
+        elif hists == dbv_coarse_hists :
+            category = "dbv_coarse"
+        elif hists == dvv_hists :
+            category = "dvv"
+        elif hists == dvv_coarse_hists :
+            category = "dvv_coarse"
+
+        # FIXME I should confirm that these uncertainties are correct
+        if normalize :
+            ratios_plot("%s_ratio_normalize" % category,hists,ps,res_fit=False,legend=(0.45, 0.73, 0.85, 0.93),draw_normalized=normalize,res_divide_opt={'confint': propagate_ratio, 'force_le_1': False, 'no_zeroes' : True})
+        else :
+            ratios_plot("%s_ratio" % category          ,hists,ps,res_fit=False,legend=(0.45, 0.73, 0.85, 0.93),draw_normalized=normalize,res_divide_opt={'confint': propagate_ratio, 'force_le_1': False, 'no_zeroes' : True},res_y_range=(0,1))
diff --git a/MFVNeutralino/test/MiniTree/run.sh b/MFVNeutralino/test/MiniTree/run.sh
index 0ec06101..50bc4986 100755
--- a/MFVNeutralino/test/MiniTree/run.sh
+++ b/MFVNeutralino/test/MiniTree/run.sh
@@ -1,20 +1,73 @@
-listOfSamples="
+listOfSamples=(
 background
 mfv_neu_tau000100um_M0400_2017
 mfv_neu_tau000100um_M0600_2017
 mfv_neu_tau000100um_M0800_2017
 mfv_neu_tau000100um_M1200_2017
 mfv_neu_tau000100um_M1600_2017
+mfv_neu_tau000100um_M3000_2017
+mfv_neu_tau000300um_M0400_2017
+mfv_neu_tau000300um_M0600_2017
+mfv_neu_tau000300um_M0800_2017
+mfv_neu_tau000300um_M1200_2017
+mfv_neu_tau000300um_M1600_2017
+mfv_neu_tau000300um_M3000_2017
+mfv_neu_tau001000um_M0400_2017
+mfv_neu_tau001000um_M0600_2017
+mfv_neu_tau001000um_M0800_2017
+mfv_neu_tau001000um_M1200_2017
+mfv_neu_tau001000um_M1600_2017
+mfv_neu_tau001000um_M3000_2017
+mfv_neu_tau010000um_M0400_2017
+mfv_neu_tau010000um_M0600_2017
+mfv_neu_tau010000um_M0800_2017
+mfv_neu_tau010000um_M1200_2017
+mfv_neu_tau010000um_M1600_2017
+mfv_neu_tau030000um_M0400_2017
+mfv_neu_tau030000um_M0600_2017
+mfv_neu_tau030000um_M0800_2017
+mfv_neu_tau030000um_M1200_2017
+mfv_neu_tau030000um_M1600_2017
+mfv_neu_tau030000um_M3000_2017
 mfv_stopdbardbar_tau000100um_M0400_2017
 mfv_stopdbardbar_tau000100um_M0600_2017
 mfv_stopdbardbar_tau000100um_M0800_2017
 mfv_stopdbardbar_tau000100um_M1200_2017
 mfv_stopdbardbar_tau000100um_M1600_2017
-"
+mfv_stopdbardbar_tau000100um_M3000_2017
+mfv_stopdbardbar_tau000300um_M0400_2017
+mfv_stopdbardbar_tau000300um_M0600_2017
+mfv_stopdbardbar_tau000300um_M0800_2017
+mfv_stopdbardbar_tau000300um_M1200_2017
+mfv_stopdbardbar_tau000300um_M1600_2017
+mfv_stopdbardbar_tau000300um_M3000_2017
+mfv_stopdbardbar_tau001000um_M0400_2017
+mfv_stopdbardbar_tau001000um_M0600_2017
+mfv_stopdbardbar_tau001000um_M0800_2017
+mfv_stopdbardbar_tau001000um_M1200_2017
+mfv_stopdbardbar_tau001000um_M1600_2017
+mfv_stopdbardbar_tau001000um_M3000_2017
+mfv_stopdbardbar_tau010000um_M0400_2017
+mfv_stopdbardbar_tau010000um_M0600_2017
+mfv_stopdbardbar_tau010000um_M0800_2017
+mfv_stopdbardbar_tau010000um_M1200_2017
+mfv_stopdbardbar_tau010000um_M1600_2017
+mfv_stopdbardbar_tau010000um_M3000_2017
+mfv_stopdbardbar_tau030000um_M0400_2017
+mfv_stopdbardbar_tau030000um_M0600_2017
+mfv_stopdbardbar_tau030000um_M0800_2017
+mfv_stopdbardbar_tau030000um_M1200_2017
+mfv_stopdbardbar_tau030000um_M1600_2017
+mfv_stopdbardbar_tau030000um_M3000_2017
+)
 
-for sample in $listOfSamples
+python plot_triggers.py background 3
+python plot_triggers.py background 4
+
+for sample in "${listOfSamples[@]}"
 do
-  for ntk in 3 4 5
+  #for ntk in 3 4 5
+  for ntk in 5
   do
     python plot_triggers.py $sample $ntk
   done
diff --git a/MFVNeutralino/test/MiniTree/studyNewTriggers.cc b/MFVNeutralino/test/MiniTree/studyNewTriggers.cc
index e9b17a18..190590c8 100644
--- a/MFVNeutralino/test/MiniTree/studyNewTriggers.cc
+++ b/MFVNeutralino/test/MiniTree/studyNewTriggers.cc
@@ -12,6 +12,21 @@ const bool prints = false;
 
 TH1D* h_nvtx = 0;
 TH1D* h_dbv = 0;
+
+// FIXME probably put all of these into a map
+TH1D* h_dbv_all = 0;
+TH1D* h_dbv_all_coarse = 0;
+TH1D* h_dbv_HT = 0;
+TH1D* h_dbv_HT_coarse = 0;
+TH1D* h_dbv_Bjet = 0;
+TH1D* h_dbv_Bjet_coarse = 0;
+TH1D* h_dbv_DisplacedDijet = 0;
+TH1D* h_dbv_DisplacedDijet_coarse = 0;
+TH1D* h_dbv_passHT_failBjet = 0;
+TH1D* h_dbv_passHT_failBjet_coarse = 0;
+TH1D* h_dbv_failHT_passBjet = 0;
+TH1D* h_dbv_failHT_passBjet_coarse = 0;
+
 TH1D* h_dvv_all = 0;
 TH1D* h_dvv_all_coarse = 0;
 TH1D* h_dvv_HT = 0;
@@ -78,6 +93,37 @@ bool analyze(long long j, long long je, const mfv::MiniNtuple& nt) {
 
   if (dbvs.size() == 1){
     h_dbv->Fill(dbvs[0], w);
+
+    h_dbv_all->Fill(dbvs[0], w);
+    h_dbv_all_coarse->Fill(dbvs[0], w);
+
+    // HT trigger
+    if(passesHTTrigger && nt.njets >= 4 && nt.ht() > 1200){
+      h_dbv_HT->Fill(dbvs[0], w);
+      h_dbv_HT_coarse->Fill(dbvs[0], w);
+    }
+    // Bjet trigger - should think about whether we can be more aggressive with the offline HT threshold
+    // e.g. from https://twiki.cern.ch/twiki/pub/CMSPublic/HighLevelTriggerRunIIResults/SUSY2015_trig-Ele15_HT350__var-HT.png
+    // it looks like the HT350 leg is 95% efficient already at ~400 GeV
+    if(passesBjetTrigger && nt.njets >= 4 && nt.ht() > 600){
+      h_dbv_Bjet->Fill(dbvs[0], w);
+      h_dbv_Bjet_coarse->Fill(dbvs[0], w);
+    }
+    // Displaced Dijet trigger
+    if(passesDisplacedDijetTrigger && nt.njets >= 4 && nt.ht() > 600){
+      h_dbv_DisplacedDijet->Fill(dbvs[0], w);
+      h_dbv_DisplacedDijet_coarse->Fill(dbvs[0], w);
+    }
+    // pass HT trigger fail Bjet trigger (to study the shape differences)
+    if(passesHTTrigger && !passesBjetTrigger && nt.njets >= 4 && nt.ht() > 1200){
+      h_dbv_passHT_failBjet->Fill(dbvs[0], w);
+      h_dbv_passHT_failBjet_coarse->Fill(dbvs[0], w);
+    }
+    // pass Bjet trigger fail HT trigger (to study the shape differences)
+    if(!passesHTTrigger && passesBjetTrigger && nt.njets >= 4 && nt.ht() > 600){
+      h_dbv_failHT_passBjet->Fill(dbvs[0], w);
+      h_dbv_failHT_passBjet_coarse->Fill(dbvs[0], w);
+    }
   }
   else if (dbvs.size() == 2){
     double dvv = hypot(nt.x0 - nt.x1, nt.y0 - nt.y1);
@@ -85,29 +131,29 @@ bool analyze(long long j, long long je, const mfv::MiniNtuple& nt) {
     h_dvv_all_coarse->Fill(dvv, w);
 
     // HT trigger
-    if(passesHTTrigger && nt.ht() > 1200){
+    if(passesHTTrigger && nt.njets >= 4 && nt.ht() > 1200){
       h_dvv_HT->Fill(dvv, w);
       h_dvv_HT_coarse->Fill(dvv, w);
     }
     // Bjet trigger - should think about whether we can be more aggressive with the offline HT threshold
     // e.g. from https://twiki.cern.ch/twiki/pub/CMSPublic/HighLevelTriggerRunIIResults/SUSY2015_trig-Ele15_HT350__var-HT.png
     // it looks like the HT350 leg is 95% efficient already at ~400 GeV
-    if(passesBjetTrigger && nt.ht() > 600){
+    if(passesBjetTrigger && nt.njets >= 4 && nt.ht() > 600){
       h_dvv_Bjet->Fill(dvv, w);
       h_dvv_Bjet_coarse->Fill(dvv, w);
     }
     // Displaced Dijet trigger
-    if(passesDisplacedDijetTrigger && nt.ht() > 600){
+    if(passesDisplacedDijetTrigger && nt.njets >= 4 && nt.ht() > 600){
       h_dvv_DisplacedDijet->Fill(dvv, w);
       h_dvv_DisplacedDijet_coarse->Fill(dvv, w);
     }
     // pass HT trigger fail Bjet trigger (to study the shape differences)
-    if(passesHTTrigger && !passesBjetTrigger && nt.ht() > 1200){
+    if(passesHTTrigger && !passesBjetTrigger && nt.njets >= 4 && nt.ht() > 1200){
       h_dvv_passHT_failBjet->Fill(dvv, w);
       h_dvv_passHT_failBjet_coarse->Fill(dvv, w);
     }
     // pass Bjet trigger fail HT trigger (to study the shape differences)
-    if(!passesHTTrigger && passesBjetTrigger && nt.ht() > 600){
+    if(!passesHTTrigger && passesBjetTrigger && nt.njets >= 4 && nt.ht() > 600){
       h_dvv_failHT_passBjet->Fill(dvv, w);
       h_dvv_failHT_passBjet_coarse->Fill(dvv, w);
     }
@@ -144,9 +190,30 @@ int main(int argc, char** argv) {
   in_f->Get("mfvWeight/h_sums")->Clone("h_sums");
   out_f.cd();
 
+  // also copy this hist if it is present (in an ntuple rather than a MiniTree)
+  if(in_f->GetDirectory("mcStat")){
+    out_f.mkdir("mcStat")->cd();
+    in_f->Get("mcStat/h_sums")->Clone("h_sums");
+    out_f.cd();
+  }
+
   // book hists
   h_nvtx = new TH1D("h_nvtx", ";# of vertices;Events", 10, 0, 10);
   h_dbv = new TH1D("h_dbv", ";d_{BV} (cm);Events/20 #mum", 1250, 0, 2.5);
+
+  h_dbv_all = new TH1D("h_dbv_all", ";d_{BV} (cm);Events/20 #mum", 2500, 0, 5.);
+  h_dbv_all_coarse = new TH1D("h_dbv_all_coarse", ";d_{BV} (cm);Events/100 #mum", 40, 0, 0.4);
+  h_dbv_HT = new TH1D("h_dbv_HT", ";d_{BV} (cm);Events/20 #mum", 2500, 0, 5.);
+  h_dbv_HT_coarse = new TH1D("h_dbv_HT_coarse", ";d_{BV} (cm);Events/100 #mum", 40, 0, 0.4);
+  h_dbv_Bjet = new TH1D("h_dbv_Bjet", ";d_{BV} (cm);Events/20 #mum", 2500, 0, 5.);
+  h_dbv_Bjet_coarse = new TH1D("h_dbv_Bjet_coarse", ";d_{BV} (cm);Events/100 #mum", 40, 0, 0.4);
+  h_dbv_DisplacedDijet = new TH1D("h_dbv_DisplacedDijet", ";d_{BV} (cm);Events/20 #mum", 2500, 0, 5.);
+  h_dbv_DisplacedDijet_coarse = new TH1D("h_dbv_DisplacedDijet_coarse", ";d_{BV} (cm);Events/100 #mum", 40, 0, 0.4);
+  h_dbv_passHT_failBjet = new TH1D("h_dbv_passHT_failBjet", ";d_{BV} (cm);Events/20 #mum", 2500, 0, 5.);
+  h_dbv_passHT_failBjet_coarse = new TH1D("h_dbv_passHT_failBjet_coarse", ";d_{BV} (cm);Events/100 #mum", 40, 0, 0.4);
+  h_dbv_failHT_passBjet = new TH1D("h_dbv_failHT_passBjet", ";d_{BV} (cm);Events/20 #mum", 2500, 0, 5.);
+  h_dbv_failHT_passBjet_coarse = new TH1D("h_dbv_failHT_passBjet_coarse", ";d_{BV} (cm);Events/100 #mum", 40, 0, 0.4);
+
   h_dvv_all = new TH1D("h_dvv_all", ";d_{VV} (cm);Events/20 #mum", 2500, 0, 5.);
   h_dvv_all_coarse = new TH1D("h_dvv_all_coarse", ";d_{VV} (cm);Events/100 #mum", 40, 0, 0.4);
   h_dvv_HT = new TH1D("h_dvv_HT", ";d_{VV} (cm);Events/20 #mum", 2500, 0, 5.);
diff --git a/MFVNeutralino/test/MiniTree/studyNewTriggers.sh b/MFVNeutralino/test/MiniTree/studyNewTriggers.sh
index d95fcae9..bb96598f 100755
--- a/MFVNeutralino/test/MiniTree/studyNewTriggers.sh
+++ b/MFVNeutralino/test/MiniTree/studyNewTriggers.sh
@@ -1,8 +1,10 @@
 #!/bin/bash
 
 indir=/uscms/home/joeyr/crabdirs/NtupleV27m_MiniNtuple_NoEF
+#indir=/uscms_data/d2/tucker/crab_dirs/MiniTreeV27m
 
 files2017=(
+    qcdht0500_2017.root
     qcdht0700_2017.root
     qcdht1000_2017.root
     qcdht1500_2017.root
@@ -17,11 +19,60 @@ files2017=(
     mfv_neu_tau000100um_M0800_2017.root
     mfv_neu_tau000100um_M1200_2017.root
     mfv_neu_tau000100um_M1600_2017.root
+    mfv_neu_tau000100um_M3000_2017.root
+    mfv_neu_tau000300um_M0400_2017.root
+    mfv_neu_tau000300um_M0600_2017.root
+    mfv_neu_tau000300um_M0800_2017.root
+    mfv_neu_tau000300um_M1200_2017.root
+    mfv_neu_tau000300um_M1600_2017.root
+    mfv_neu_tau000300um_M3000_2017.root
+    mfv_neu_tau001000um_M0400_2017.root
+    mfv_neu_tau001000um_M0600_2017.root
+    mfv_neu_tau001000um_M0800_2017.root
+    mfv_neu_tau001000um_M1200_2017.root
+    mfv_neu_tau001000um_M1600_2017.root
+    mfv_neu_tau001000um_M3000_2017.root
+    mfv_neu_tau010000um_M0400_2017.root
+    mfv_neu_tau010000um_M0600_2017.root
+    mfv_neu_tau010000um_M0800_2017.root
+    mfv_neu_tau010000um_M1200_2017.root
+    mfv_neu_tau010000um_M1600_2017.root
+    mfv_neu_tau030000um_M0400_2017.root
+    mfv_neu_tau030000um_M0600_2017.root
+    mfv_neu_tau030000um_M0800_2017.root
+    mfv_neu_tau030000um_M1200_2017.root
+    mfv_neu_tau030000um_M1600_2017.root
+    mfv_neu_tau030000um_M3000_2017.root
     mfv_stopdbardbar_tau000100um_M0400_2017.root
     mfv_stopdbardbar_tau000100um_M0600_2017.root
     mfv_stopdbardbar_tau000100um_M0800_2017.root
     mfv_stopdbardbar_tau000100um_M1200_2017.root
     mfv_stopdbardbar_tau000100um_M1600_2017.root
+    mfv_stopdbardbar_tau000100um_M3000_2017.root
+    mfv_stopdbardbar_tau000300um_M0400_2017.root
+    mfv_stopdbardbar_tau000300um_M0600_2017.root
+    mfv_stopdbardbar_tau000300um_M0800_2017.root
+    mfv_stopdbardbar_tau000300um_M1200_2017.root
+    mfv_stopdbardbar_tau000300um_M1600_2017.root
+    mfv_stopdbardbar_tau000300um_M3000_2017.root
+    mfv_stopdbardbar_tau001000um_M0400_2017.root
+    mfv_stopdbardbar_tau001000um_M0600_2017.root
+    mfv_stopdbardbar_tau001000um_M0800_2017.root
+    mfv_stopdbardbar_tau001000um_M1200_2017.root
+    mfv_stopdbardbar_tau001000um_M1600_2017.root
+    mfv_stopdbardbar_tau001000um_M3000_2017.root
+    mfv_stopdbardbar_tau010000um_M0400_2017.root
+    mfv_stopdbardbar_tau010000um_M0600_2017.root
+    mfv_stopdbardbar_tau010000um_M0800_2017.root
+    mfv_stopdbardbar_tau010000um_M1200_2017.root
+    mfv_stopdbardbar_tau010000um_M1600_2017.root
+    mfv_stopdbardbar_tau010000um_M3000_2017.root
+    mfv_stopdbardbar_tau030000um_M0400_2017.root
+    mfv_stopdbardbar_tau030000um_M0600_2017.root
+    mfv_stopdbardbar_tau030000um_M0800_2017.root
+    mfv_stopdbardbar_tau030000um_M1200_2017.root
+    mfv_stopdbardbar_tau030000um_M1600_2017.root
+    mfv_stopdbardbar_tau030000um_M3000_2017.root
 )
 
 files2018=(
diff --git a/MFVNeutralino/test/predict2v.py b/MFVNeutralino/test/predict2v.py
index 22c1da97..a137d3d9 100644
--- a/MFVNeutralino/test/predict2v.py
+++ b/MFVNeutralino/test/predict2v.py
@@ -1,7 +1,7 @@
 from JMTucker.Tools.ROOTTools import *
 
-presel_path = '/uscms_data/d2/tucker/crab_dirs/PreselHistosV25m'
-sel_path = '/uscms_data/d2/tucker/crab_dirs/HistosV25mv3'
+presel_path = '/uscms_data/d2/tucker/crab_dirs/PreselHistosV27m'
+sel_path = '/uscms_data/d2/tucker/crab_dirs/HistosV27m'
 
 if 'data' in sys.argv:
     fn, presel_scale = 'JetHT2017p8.root', 0.1
diff --git a/Tools/python/ROOTTools.py b/Tools/python/ROOTTools.py
index e59773f5..1a863291 100644
--- a/Tools/python/ROOTTools.py
+++ b/Tools/python/ROOTTools.py
@@ -1881,7 +1881,8 @@ def ratios_plot(name,
         gg.GetYaxis().SetTitle(hists[0].GetYaxis().GetTitle())
         #canvas.Update()
     else:
-        for i,h in enumerate(sorted(hists, key=lambda h: h.v, reverse=True)):
+        #for i,h in enumerate(sorted(hists, key=lambda h: h.v, reverse=True)): # this sorts by the integral
+        for i,h in enumerate(hists) : # this keeps the initial order
             cmd = h.DrawNormalized if draw_normalized else h.Draw
             dc = draw_cmds[i]
             if i == 0:
